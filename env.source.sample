### Select container subsystem, options include:
### - "docker"
### - "sudo docker"
### - "podman"
### How its used:
###     build.sh: time ${CONTAINER_SUBSYS}  build
###     ocm-container.sh: ${CONTAINER_SUBSYS} run -it --rm
# REQUIRED: change this env to containerization tool
export CONTAINER_SUBSYS="sudo docker"

### Select cli, options include:
### - "ocm"
### - "rosa"
### defaults to "ocm"
export CLI=${CLI:-}

### The Url in which you want your ocm queries to go to
### you can use 'staging' or 'integration'
###
### for more information see `ocm login -h`
export OCM_URL=${OCM_URL:-}

### Your user for ocm, passed to ocm
# REQUIRED: change this env to your local user
export OCM_USER=${OCM_USER:-your_user}

### Default namespace for velero
# set this if you want to change the default velero namespace in container.
# export DEFAULT_VELERO_NS=openshift-velero

### Your ocm Offline Access Token from
###     https://cloud.redhat.com/openshift/token
# REQUIRED: change this env to offline token
export OFFLINE_ACCESS_TOKEN="\
your \
token \
here \
"

### Configure the PATH variable inside the container
### the ${HOME}/.config/ocm-contianer is mounted to the container at /root/.config/ocm-container
### this can be used to add additional tooling to the container without modifying the dockerfile
# export PATH=${PATH}:/root/.config/ocm-container/bin
